{"version":3,"sources":["components/LoginForm.js","components/columns.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Login","error","useState","name","email","password","details","setDetails","onSubmit","e","preventDefault","className","htmlFor","type","id","onChange","target","value","Name","EMail","Password","COLUMNS","Header","accessor","Table","columns","useMemo","data","MOCK_DATA","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cell","getCellProps","App","adminUser","user","setUser","setError","Logout","console","log","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yNAqCeA,MAnCf,YAAqC,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,MAAS,EACHC,mBAAS,CAACC,KAAK,GAAIC,MAAM,GAAGC,SAAS,KADlC,mBACzBC,EADyB,KACjBC,EADiB,KAUhC,OAEI,sBAAMC,SATY,SAAAC,GAClBA,EAAEC,iBAEFV,EAAMM,IAMN,SACI,gCACI,uCACW,IAATL,EAAiB,qBAAKU,UAAU,QAAf,SAAwBV,IAAgB,GAC3D,sBAAKU,UAAY,aAAjB,UACI,uBAAOC,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOV,KAAK,OAAOW,GAAG,OAAOC,SAAU,SAAAN,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAcH,KAAMM,EAAEO,OAAOC,UAASA,MAAQX,EAAQY,UAE5H,sBAAKP,UAAY,aAAjB,UACI,uBAAOC,QAAQ,QAAf,uBACA,uBAAOC,KAAK,QAAQV,KAAK,QAAQW,GAAG,QAAQC,SAAU,SAAAN,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAcF,MAAOK,EAAEO,OAAOC,UAASA,MAAQX,EAAQa,WAEhI,sBAAKR,UAAY,aAAjB,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,WAAWV,KAAK,WAAWW,GAAG,WAAWC,SAAU,SAAAN,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAcD,SAAUI,EAAEO,OAAOC,UAASA,MAAQX,EAAQc,cAE5I,uBAAOP,KAAM,SAASI,MAAM,gB,cC9B/BI,EAAQ,CACjB,CACIC,OAAQ,OACRC,SAAU,cAEd,CACID,OAAQ,UACRC,SAAU,WAGd,CACID,OAAQ,SACRC,SAAU,OC2CHC,G,MAjDM,WACjB,IAAMC,EAAUC,mBAAU,kBAAKL,IAAS,IAClCM,EAAOD,mBAAQ,kBAAKE,IAAW,IAE/BC,EAAgBC,mBAAS,CAC3BL,UACAE,SAIII,EAIYF,EAJZE,cACJC,EAGgBH,EAHhBG,kBACAC,EAEgBJ,EAFhBI,aACAC,EACgBL,EADhBK,KACAC,EAAgBN,EAAhBM,WAEJ,OACI,kDAAWJ,GAAX,cACI,gCACKE,EAAaG,KAAI,SAACH,GAAD,OAClB,8CAAQA,EAAaI,uBAArB,aACKJ,EAAaK,QAAQF,KAAK,SAAAX,GAAO,OAC9B,8CAAQA,EAAQc,kBAAhB,aAAmCd,EAAQe,OAAO,wBAQ9D,iDAAaR,KAAb,aACKE,EAAKE,KAAI,SAACF,GAEP,OADAC,EAAWD,GAEP,8CAAQA,EAAKO,eAAb,aACKP,EAAKQ,MAAMN,KAAI,SAACO,GACb,OAAO,8CAAOA,EAAKC,gBAAZ,aAA6BD,EAAKH,OAAO,6BCWjEK,MAjDf,WACE,IAAMC,EACI,kBADJA,EAEO,WAHA,EAMW5C,mBAAS,CAACC,KAAK,GAAIC,MAAM,KANpC,mBAMN2C,EANM,KAMAC,EANA,OAOY9C,mBAAS,IAPrB,mBAOND,EAPM,KAOAgD,EAPA,KAyBPC,EAAS,WACbF,EAAQ,CAAC7C,KAAK,GAAIC,MAAM,KACxB+C,QAAQC,IAAI,eAId,OACE,qBAAKzC,UAAU,MAAf,SACmB,IAAdoC,EAAK3C,MACN,sBAAKO,UAAW,UAAhB,UACE,2CAAa,+BAAOoC,EAAK5C,UACzB,uBACA,cAAC,EAAD,CAAO4C,KAAMA,EAAMG,OAAQA,IAC3B,wBAAQvC,UAAU,SAAS0C,QAASH,EAApC,uBAGF,cAAC,EAAD,CAAWlD,MAhCH,SAAAM,GACZ6C,QAAQC,IAAI9C,GAETA,EAAQF,OAAS0C,GAAmBxC,EAAQD,UAAYyC,GACzDK,QAAQC,IAAI,aACVJ,EAAQ,CACN7C,KAAMG,EAAQH,KACdC,MAAOE,EAAQF,UAInB+C,QAAQC,IAAI,wBACZH,EAAS,0BAoBkBhD,MAAOA,OCjCzBqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASvB,OACP,cAAC,IAAMwB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.709036f5.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction LoginForm({ Login,error }) {\r\n    const [details,setDetails] = useState({name:'', email:'',password:''});\r\n    \r\n    const submitHandler = e => {\r\n        e.preventDefault(); \r\n\r\n        Login(details);\r\n    }\r\n    \r\n    \r\n    return (\r\n\r\n        <form onSubmit={submitHandler}>\r\n            <div>\r\n                <h2>Login</h2>\r\n                {(error != '') ? ( <div className='error'>{error}</div>) : ''}\r\n                <div className = 'form-group'>\r\n                    <label htmlFor='name'>Name:</label>\r\n                    <input type='text' name='name' id='name' onChange={e => setDetails({...details, name: e.target.value})} value= {details.Name} /> \r\n                </div>\r\n                <div className = 'form-group'>\r\n                    <label htmlFor='email'>Email ID:</label>\r\n                    <input type='email' name='email' id='email' onChange={e => setDetails({...details, email: e.target.value})} value= {details.EMail}/> \r\n                </div>\r\n                <div className = 'form-group'>\r\n                    <label htmlFor='password'>Password:</label>\r\n                    <input type='password' name='password' id='password' onChange={e => setDetails({...details, password: e.target.value})} value= {details.Password}/> \r\n                </div>\r\n                <input type ='submit' value='login' />\r\n            </div>\r\n        </form>    \r\n\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","export const COLUMNS=[\r\n    {\r\n        Header: 'Name',\r\n        accessor: 'first_name'\r\n    },\r\n    {\r\n        Header: 'Address',\r\n        accessor: 'address'\r\n    \r\n    },\r\n    {\r\n        Header: 'UserID',\r\n        accessor: 'id'\r\n    \r\n    },   \r\n]","import React,{ useMemo} from 'react'\r\nimport {useTable} from 'react-table'\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport {COLUMNS} from './columns'\r\nimport './table.css'\r\n\r\nexport const Table = () => {\r\n    const columns = useMemo  (()=> COLUMNS, [])\r\n    const data = useMemo(()=> MOCK_DATA, [])\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n\r\n    })\r\n\r\n    const { getTableProps, \r\n        getTableBodyProps, \r\n        headerGroups, \r\n        rows, \r\n        prepareRow, } = tableInstance\r\n\r\n    return (\r\n        <table {...getTableProps}>\r\n            <thead>\r\n                {headerGroups.map((headerGroups) =>(\r\n                <tr {...headerGroups.getHeaderGroupProps()}>\r\n                    {headerGroups.headers.map( columns =>(\r\n                        <th {...columns.getHeaderProps()}>{columns.render('Header')}\r\n\r\n                    </th>\r\n                        ))}\r\n                </tr>\r\n                ))}\r\n                \r\n            </thead>\r\n            <tbody  { ...getTableBodyProps()}>\r\n                {rows.map((rows) => {\r\n                    prepareRow(rows)\r\n                    return(\r\n                        <tr {...rows.getRowProps()} >\r\n                            {rows.cells.map((cell) =>{\r\n                                return <td{...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            </tr>\r\n                    )\r\n                })}\r\n                   \r\n            </tbody>\r\n            \r\n        </table>\r\n        \r\n    )\r\n    \r\n}\r\nexport default Table\r\n","import React, { useState} from 'react';\nimport LoginForm from './components/LoginForm'\nimport Table from './components/Table'\n\nfunction App() {\n  const adminUser = {\n    email:  'admin@admin.com',\n    password:  'password'       \n  }\n\n  const [user, setUser] = useState({name:'', email:''});\n  const [error,setError] = useState('');\n\n  const Login = details =>{\n    console.log(details);\n\n    if(details.email == adminUser.email && details.password == adminUser.password){\n      console.log('Logged in')\n        setUser({\n          name: details.name,\n          email: details.email \n          \n        })\n      }else{  \n      console.log('Details do not match');\n      setError('Details do not match');\n      }\n    }\n\n  const Logout = () =>{\n    setUser({name:'', email:''})\n    console.log('Logged out')\n  }\n\n\n  return (\n    <div className=\"App\">\n      { (user.email != '') ? (\n        <div className ='Welcome'>\n          <h2>Welcome, <span>{user.name}</span></h2>\n          <hr/>\n          <Table user={user} Logout={Logout}/>\n          <button className='button' onClick={Logout}>Logout</button>\n        </div>\n      ) : (\n        <LoginForm Login={Login} error={error}/>\n       )\n    } \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}